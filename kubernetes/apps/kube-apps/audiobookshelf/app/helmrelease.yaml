---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: warn
  maxHistory: 2
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: 2.29.0@sha256:dd4a3079d26bfe9f0ea63de3e3eff483dfa25fef05ef850a5a9d121dca3794b2
            securityContext:
              readOnlyRootFilesystem: true
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 150m
                memory: 256Mi
              limits:
                memory: 768Mi
            env:
              AUDIOBOOKSHELF_GID: 568
              AUDIOBOOKSHELF_UID: 568
              TZ: ${TIMEZONE}
              PORT: &port 80
            probes:
              startup:
                enabled: true
                path: "/ping"
                type: HTTP
                port: *port
                spec:
                  initialDelaySeconds: 30
                  failureThreshold: 5
              liveness:
                enabled: true
                path: "/ping"
              readiness:
                enabled: true
                path: "/ping"
    service:
      app:
        controller: app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["abs.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: audiobookshelf-config
      metadata:
        type: persistentVolumeClaim
        existingClaim: audiobookshelf-metadata
      mcache:
        type: emptyDir
        globalMounts:
          - path: /metadata/cache
      mtmp:
        type: emptyDir
        globalMounts:
          - path: /metadata/tmp
      tmp:
        type: emptyDir
      media:
        type: persistentVolumeClaim
        existingClaim: audiobookshelf-data
