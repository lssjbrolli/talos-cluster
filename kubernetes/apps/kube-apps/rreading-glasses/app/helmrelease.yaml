---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rreading-glasses
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: rg-secrets
        containers:
          main:
            image:
              repository: blampe/rreading-glasses
              tag: hardcover@sha256:41425bd81dc95835fcc6e0942d602f95bd93d786cdeec073d5d3fee47275d797
            command: ["/main", "serve"]
            args:
              - --postgres-host=$(INIT_POSTGRES_HOST)
              - --postgres-user=$(INIT_POSTGRES_USER)
              - --postgres-password=$(INIT_POSTGRES_PASS)
              - --postgres-database=$(INIT_POSTGRES_DBNAME)
              - --hardcover-auth=$(HARDCOVER_AUTH)
              - --verbose
              - --port=80
            envFrom: *envFrom
            probes:
              # TODO: application is very alpha, enable when a real health route is exposed
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 64Mi
              limits:
                memory: 256Mi

    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port

