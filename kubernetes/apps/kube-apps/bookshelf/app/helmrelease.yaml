---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bookshelf
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    # defaultPodOptions:
    #   securityContext:
    #     # fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: bookshelf-secrets
        containers:
          main:
            image:
              repository: ghcr.io/pennydreadful/bookshelf
              tag: hardcover-v0.4.19@sha256:827b5a896172fbf0188f37db4a8ea9b82d4b601060b54893a00ce9df12f0632e
            securityContext:
              # runAsNonRoot: true
              # runAsUser: 568
              # runAsGroup: 568
              # allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            env:
              TZ: ${CONFIG_TIMEZONE}
              READARR__APP__INSTANCENAME: Readarr
              READARR__APP__THEME: auto
              READARR__LOG__LEVEL: info
              READARR__LOG__DBENABLED: False
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              READARR__AUTH__METHOD: Basic
              READARR__SERVER__PORT: &port 80
              READARR__SERVER__BINDADDRESS: "*"
              READARR__SERVER__ENABLESSL: False
              READARR__UPDATE__BRANCH: develop
              READARR__UPDATE__MECHANISM: docker
              READARR__UPDATE__AUTOMATICALLY: False
              # S6_YES_I_WANT_A_WORLD_WRITABLE_RUN_BECAUSE_KUBERNETES: "1"
              # S6_READ_ONLY_ROOT: "0"
              S6_VERBOSITY: "5"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: bookshelf-config
      media:
        type: persistentVolumeClaim
        existingClaim: bookshelf-data
      tmp:
        type: emptyDir
      run:
        type: emptyDir
