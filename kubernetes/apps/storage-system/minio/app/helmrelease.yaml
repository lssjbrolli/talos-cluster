---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: minio
spec:
  interval: 60m
  chartRef:
    kind: OCIRepository
    name: minio
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch

    controllers:
      minio:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-10-02T17-50-41Z

            env:
              MINIO_UPDATE: "off"
              MINIO_BROWSER_REDIRECT_URL: "https://minio.${SECRET_DOMAIN}"
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${SECRET_DOMAIN},https://s3.${SECRET_DOMAIN}
              MINIO_PROMETHEUS_JOB_ID: minio
              MINIO_PROMETHEUS_URL: https://prometheus.${SECRET_DOMAIN}
              MINIO_PROMETHEUS_AUTH_TYPE: public

            envFrom:
              - secretRef:
                  name: minio-secret

            args: ["server", "/data", "--console-address", ":9001"]

            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /minio/health/live
                    port: 9000
                  initialDelaySeconds: 30
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes

            resources:
              requests:
                memory: 768Mi
                cpu: 10m
              limits:
                memory: 1Gi

    service:
      app:
        controller: minio
        ports:
          http:
            port: &http 9001
          s3:
            port: 9000

    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: https
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s

    route:
      app:
        hostnames:
          - "minio.${SECRET_DOMAIN}"
        parentRefs:
          - name: internal
            namespace: network
            sectionName: http
        rules:
          - backendRefs:
              - identifier: app
                port: *http

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: minio-data
        globalMounts:
          - path: /data
