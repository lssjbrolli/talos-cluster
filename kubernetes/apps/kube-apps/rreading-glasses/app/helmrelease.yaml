---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rreading-glasses
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: rreading-glasses
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom:
              - secretRef:
                  name: rg-secrets
        containers:
          main:
            image:
              repository: blampe/rreading-glasses
              tag: hardcover@sha256:ecdfd6606bc3b9953e97e6ac23e31604ba8af4fe32fb5583388b2e309bf457f0
            command: ["/main", "serve"]
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            env:
              TZ: ${TIMEZONE}
              HARDCOVER_AUTH:
                valueFrom:
                  secretKeyRef:
                    name: rg-secrets
                    key: HARDCOVER

    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: &port 80
            targetPort: 8788


    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: rreading-glasses-config
