---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pgadmin
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 0
        containers:
          main:
            image:
              repository: dpage/pgadmin4
              tag: 9.8.0@sha256:d115bcd737940a6cfb61a54439d50de8b850e0782e2363102c9fa761f4022f49
            # TODO: fix
            securityContext:
            #   readOnlyRootFilesystem: false
              runAsNonRoot: false
              runAsUser: 0
            #   runAsGroup: 568
            #   fsGroup: 568
            #   fsGroupChangePolicy: OnRootMismatch
              seccompProfile: { type: RuntimeDefault }
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
                memory: 128Mi
              limits:
                memory: 256Mi
            env:
              - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
                value: "False"
              - name: PGADMIN_DISABLE_POSTFIX
                value: "False"
              - name: TZ
                value: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            probes:
              liveness:
                enabled: true
                type: HTTP
                path: /misc/ping
              readiness:
                enabled: true
                type: HTTP
                path: /misc/ping
              startup:
                enabled: true
                type: HTTP
                path: /misc/ping
                spec:
                  initialDelaySeconds: 30
                  failureThreshold: 5
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: &port 80
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: pgadmin-config
        globalMounts:
          - path: /var/lib/pgadmin

