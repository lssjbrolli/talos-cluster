---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secrets
        containers:
          main:
            image:
              repository: ghcr.io/elfhosted/prowlarr-develop
              tag: 1.36.3.5071@sha256:38638743d41be23f593aecd8c88bec14fcbc2a66b33d4fc3c55969a6d7cb8c68
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            env:
              TZ: ${CONFIG_TIMEZONE}
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__APP__THEME: auto
              PROWLARR__APP__LAUNCHBROWSER: False
              PROWLARR__LOG__LEVEL: info
              PROWLARR__LOG__DBENABLED: False
              PROWLARR__LOG__ANALYTICSENABLED: True
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__AUTH__METHOD: Basic
              PROWLARR__SERVER__PORT: &port 80
              PROWLARR__SERVER__BINDADDRESS: "*"
              PROWLARR__SERVER__ENABLESSL: False
              PROWLARR__UPDATE__BRANCH: develop
              PROWLARR__UPDATE__MECHANISM: docker
              PROWLARR__UPDATE__AUTOMATICALLY: False
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
    ingress:
      # Configure an Ingress for the main application
      main:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host prowlarr.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: prowlarr-cert
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: prowlarr-config
