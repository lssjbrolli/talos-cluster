---
# yaml-language-server: $schema=https://raw.githubusercontent.com/cloudnative-pg/charts/refs/heads/main/charts/cluster/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cluster16
  namespace: db
spec:
  releaseName: cluster16
  chart:
    spec:
      chart: cluster
      version: 0.1.0
      sourceRef:
        kind: HelmRepository
        name: cnpg
        namespace: flux-system
  interval: 30m
  install:
    remediation:
      retries: 3
  dependsOn:
    - name: democratic-csi
      namespace: storage-system
  values:
    cluster:
      imageName: ghcr.io/cloudnative-pg/postgresql:16.4-19@sha256:d66c35dc163f69237ca4265042fa2a867ee015af788a584ce02b0808c8b934c9
      instances: 2
      logLevel: warning
      mode: recovery
      resources:
        requests:
          cpu: 150m
          memory: 256Mi
        limits:
          memory: 256Mi
      storage:
        size: 5Gi
        storageClass: iscsi
      walStorage:
        enabled: true
        size: 1Gi
        storageClass: iscsi
      superuserSecret: cloudnative-pg-secret
      monitoring:
        enabled: true
      postgresql:
        parameters:
          max_connections: "100"
          shared_buffers: 256MB
    backups:
      enabled: true
      retentionPolicy: 7d
      provider: s3
      endpointURL: http://minio.storage-system.svc.cluster.local:9000
      secret:
        create: false
        name: s3-secret
      data:
        compression: bzip2
        encryption: ''
      wal:
        compression: bzip2
        maxParallel: 8
        encryption: ''
      s3:
        region: "eu-east"
        bucket: "cnpg"
        path: "/v1"
        accessKey: aws-access-key-id
        secretKey: aws-secret-access-key
      scheduledBackups:
        - name: cnpg-backup
          schedule: "0 0 */6 * * *"
          backupOwnerReference: self
    recovery:
      clusterName: cluster16
      endpointURL: http://minio.storage-system.svc.cluster.local:9000
      method: object_store
      provider: s3
      s3:
        region: "eu-east"
        bucket: "cnpg"
        path: "/v2"
        accessKey: aws-access-key-id
        secretKey: aws-secret-access-key
      secret:
        create: false
        name: s3-secret
    type: postgresql
