---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secrets
        containers:
          main:
            image:
              repository: ghcr.io/elfhosted/radarr-develop
              tag: 5.22.0.9808@sha256:08ea252ba4403ca4bc95ec2d61fe8994d09ebfc818ca6351f42f126678d397e1
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            env:
              TZ: ${CONFIG_TIMEZONE}
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: auto
              RADARR__APP__LAUNCHBROWSER: False
              RADARR__LOG__LEVEL: info
              RADARR__LOG__DBENABLED: True
              RADARR__LOG__ANALYTICSENABLED: True
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__AUTH__METHOD: Basic
              RADARR__SERVER__PORT: &port 80
              RADARR__SERVER__BINDADDRESS: "*"
              RADARR__SERVER__ENABLESSL: False
              RADARR__UPDATE__BRANCH: develop
              RADARR__UPDATE__MECHANISM: docker
              RADARR__UPDATE__AUTOMATICALLY: False
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port

    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: radarr-config
      media:
        type: persistentVolumeClaim
        existingClaim: radarr-data
