---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: robusta
spec:
  interval: 30m
  chart:
    spec:
      chart: robusta
      version: 0.20.0
      sourceRef:
        kind: HelmRepository
        name: robusta
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    clusterName: talos-cluster
    globalConfig:
      signing_key: "{{ env.SIGNKEY }}"
      account_id: "{{ env.ACCOUNTID }}"
    sinksConfig:
      - robusta_sink:
          name: robusta_ui_sink
          token: "{{ env.TOKEN }}"
      - discord_sink:
          name: personal_discord_sink
          url: "{{env.WEBHOOK}}"
      - telegram_sink:
          name: personal_telegram_sink
          bot_token: "{{env.BOTTOKEN}}"
          chat_id: "{{env.CHATID}}"
          send_files: False
    enablePrometheusStack: true
    enablePlatformPlaybooks: true
    runner:
      sendAdditionalTelemetry: true
      additional_env_vars:
        - name: SIGNKEY
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: signing_key
        - name: ACCOUNTID
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: account_id
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: token
        - name: WEBHOOK
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: webhook
        - name: BOTTOKEN
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: bot_token
        - name: CHATID
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: chat_id
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1Gi
    enableHolmesGPT: true
    holmes:
      additionalEnvVars:
        - name: ROBUSTA_AI
          value: "true"
        - name: ROBUSTA_UI_TOKEN
          valueFrom:
            secretKeyRef:
              name: robusta-secrets
              key: token
    enabledManagedConfiguration: true # Enable managed alerts
    kube-prometheus-stack: # those rules are now managed by Robusta
      defaultRules:
        rules:
          alertmanager: false
          etcd: false
          configReloaders: false
          general: false
          kubeApiserverSlos: false
          kubeControllerManager: false
          kubeProxy: false
          kubernetesApps: false
          kubernetesResources: false
          kubernetesStorage: false
          kubernetesSystem: false
          kubeSchedulerAlerting: false
          kubeStateMetrics: false
          network: false
          nodeExporterAlerting: false
          prometheus: false
          prometheusOperator: false
      grafana:
        persistence:
          enabled: true
      prometheus:
        prometheusSpec:
          resources:
            requests:
              cpu: 100m
              memory: 1Gi
            limits:
              memory: 2Gi
    prometheus:
      prometheusSpec:
        retention: 15d #change the number of days here
