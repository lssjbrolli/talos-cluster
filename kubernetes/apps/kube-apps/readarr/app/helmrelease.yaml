---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: readarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: democratic-csi
      namespace: storage-system
    - name: volsync
      namespace: storage-system
    - name: minio
      namespace: storage-system
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6@sha256:35353a77777ee8f634d0f3945f495b4a40065134b8619e0d18bd49b0ee9c855b
            envFrom: &envFrom
              - secretRef:
                  name: readarr-secrets
        containers:
          main:
            image:
              repository: hotio/readarr
              tag: testing-0.4.4.2686@sha256:a386c0af7dc372d324061c4750e02ac34e193002e9bf08b5ad2f5b4fac155ed5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 256Mi
              limits:
                memory: 512Mi
            env:
              TZ: ${CONFIG_TIMEZONE}
              READARR__APP__INSTANCENAME: Readarr
              READARR__APP__THEME: auto
              READARR__LOG__LEVEL: info
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              READARR__AUTH__METHOD: Basic
              READARR__SERVER__PORT: &port 80
              READARR__SERVER__BINDADDRESS: "*"
              READARR__SERVER__ENABLESSL: False
              READARR__UPDATE__BRANCH: develop
              READARR__UPDATE__MECHANISM: docker
              READARR__UPDATE__AUTOMATICALLY: False
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
    ingress:
      # Configure an Ingress for the main application
      main:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        hosts:
          - host: "readarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: readarr-config
      media:
        type: nfs
        server: 192.168.1.150
        path: /mnt/storage/media
