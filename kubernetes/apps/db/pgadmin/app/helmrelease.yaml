---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pgadmin
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: dpage/pgadmin4
              tag: 8.12.0@sha256:585350593e8b0483941fa9a2d5ebb04b88a66e83a7b5603c169f9446b271312f
            securityContext:
              allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch
              seccompProfile: { type: RuntimeDefault }
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 256Mi
            env:
              - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
                value: "False"
              - name: TZ
                value: ${CONFIG_TIMEZONE}
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            probes:
              liveness:
                enabled: true
                type: HTTP
                path: /misc/ping
              readiness:
                enabled: true
                type: HTTP
                path: /misc/ping
              startup:
                enabled: true
                type: HTTP
                path: /misc/ping
                spec:
                  initialDelaySeconds: 30
                  failureThreshold: 5
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: 80
    ingress:
      # Configure an Ingress for the main application
      main:
        className: "internal"
        hosts:
          - host: "pgadmin.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
    persistence:
      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 200Mi
        globalMounts:
          - path: /var/lib/pgadmin

