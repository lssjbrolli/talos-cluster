---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16.6@sha256:a37bbb04a0ea3f15b505c6f97637e7ae89bc66541ae23b8d3848024087980e76
            envFrom:
              - secretRef:
                  name: vault-db
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            seccompProfile: { type: RuntimeDefault }
        containers:
          main:
            image:
              repository: vaultwarden/server
              tag: 1.33.0@sha256:e81ca01351ecf40083366202b163e7a31abca04d96e2194e9e1f78a57052f65c
            securityContext:
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 256Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /alive
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            env:
              - name: DATABASE_URL
                secretKeyRef:
                  name: vault-secrets
                  key: db
              - name: DATA_FOLDER
                value: data
              - name: ICON_CACHE_FOLDER
                value: data/icon_cache
              - name: ATTACHMENTS_FOLDER
                value: data/attachments
              - name: DOMAIN
                value: "https://vaultwarden.${SECRET_EXTERNAL_DOMAIN}"
              - name: TZ
                value:  "${CONFIG_TIMEZONE}"
              - name: SIGNUPS_ALLOWED
                value: 'false'
              - name: PUSH_ENABLED
                value: "true"
              - name: PUSH_INSTALLATION_ID
                secretKeyRef:
                  name: vault-secrets
                  key: push-id
              - name: PUSH_INSTALLATION_KEY
                secretKeyRef:
                  name: vault-secrets
                  key: push-key
              - name: PUSH_RELAY_URI
                value: https://api.bitwarden.eu
              - name: PUSH_IDENTITY_URI
                value: https://identity.bitwarden.eu
              - name: INVITATION_ORG_NAME
                value: 'seganet'
              - name: LOG_LEVEL
                value: 'warn'
              - name: EXPERIMENTAL_CLIENT_FEATURE_FLAGS
                value: 'autofill-v2,ssh-key-vault-item,ssh-agent'
              # TODO: configure smtp
              # - name: SMTP_HOST
              #   value: smtp-relay.default.svc.cluster.local.
              # - name: SMTP_FROM
              #   value: vaultwarden@${SECRET_DOMAIN}
              # - name: SMTP_FROM_NAME
              #   value: vaultwarden
              # - name: SMTP_PORT
              #   value: 2525
              # - name: SMTP_SECURITY
              #   value: "off"
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
    ingress:
      # Configure an Ingress for the main application
      main:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "vault.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: vault-cert
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: vaultwarden-config
        globalMounts:
          - path: /data
