---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bernd-schorgers/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vaultwarden
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.6.0@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd
            envFrom:
              - secretRef:
                  name: vault-db
        containers:
          main:
            image:
              repository: vaultwarden/server
              tag: 1.34.3@sha256:84fd8a47f58d79a1ad824c27be0a9492750c0fa5216b35c749863093bfa3c3d7
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 128Mi
              limits:
                memory: 512Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /alive
                    port: &port 80
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            env:
              - name: DATABASE_URL
                secretKeyRef:
                  name: vault-secrets
                  key: db
              - name: DATA_FOLDER
                value: data
              - name: ICON_CACHE_FOLDER
                value: data/icon_cache
              - name: ATTACHMENTS_FOLDER
                value: data/attachments
              - name: DOMAIN
                value: "https://vaultwarden.${SECRET_EXTERNAL_DOMAIN}"
              - name: TZ
                value:  "${TIMEZONE}"
              - name: SIGNUPS_ALLOWED
                value: 'false'
              - name: PUSH_ENABLED
                value: "true"
              - name: PUSH_INSTALLATION_ID
                secretKeyRef:
                  name: vault-secrets
                  key: push-id
              - name: PUSH_INSTALLATION_KEY
                secretKeyRef:
                  name: vault-secrets
                  key: push-key
              - name: PUSH_RELAY_URI
                value: https://api.bitwarden.eu
              - name: PUSH_IDENTITY_URI
                value: https://identity.bitwarden.eu
              - name: INVITATION_ORG_NAME
                value: 'seganet'
              - name: LOG_LEVEL
                value: 'warn'
              - name: EXPERIMENTAL_CLIENT_FEATURE_FLAGS
                value: 'autofill-v2,ssh-key-vault-item,ssh-agent'
              # - name: ADMIN_TOKEN
              #   value: 'sega'
              # TODO: configure smtp
              # - name: SMTP_HOST
              #   value: smtp-relay.default.svc.cluster.local.
              # - name: SMTP_FROM
              #   value: vaultwarden@${SECRET_DOMAIN}
              # - name: SMTP_FROM_NAME
              #   value: vaultwarden
              # - name: SMTP_PORT
              #   value: 2525
              # - name: SMTP_SECURITY
              #   value: "off"
    service:
      main:
        controller: main
        type: ClusterIP
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["vault.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: main
                port: *port
    persistence:
      config:
        type: persistentVolumeClaim
        existingClaim: vaultwarden-config
        globalMounts:
          - path: /data
