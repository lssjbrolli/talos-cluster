---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  timeout: 5m
  interval: 10m
  chart:
    spec:
      chart: nextcloud
      version: 7.0.1
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: -3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: -3
  dependsOn:
    - name: volsync
      namespace: storage-system
    - name: cluster17
      namespace: db
  values:
    image:
      tag: 31.0.4-fpm-alpine@sha256:a111d5b748a259936b075575879c621dd387b18fb8a864a2ed8f3f4f9c288f3f
      flavor: fpm-alpine
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.29.1-alpine@sha256:c3d2ee1eed702c6f29f2e2f727e93b5cafdc7dec7feef3ad2e6d7c39670853ec
    redis:
      enabled: true
      auth:
        existingSecret: nextcloud-secret
        existingSecretPasswordKey: pass
      master:
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            memory: 256Mi
      replica:
        replicaCount: 1
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            memory: 256Mi
    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/home-operations/postgres-init:17.5.0@sha256:e0c87ce7df39d06b93f27cf2cc6a056611f13faaa88cc07ab4dc8bf7a85d0b11
          envFrom:
            - secretRef:
                name: nextcloud-db
      datadir: /var/www/data
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: user
        passwordKey: pass
      # extraEnv:
      #   - name: REDIS_HOST
      #     value: dragonfly.db.svc.cluster.local.
      #   - name: REDIS_HOST_PORT
      #     value: "6379"
      host: &host "cloud.${SECRET_DOMAIN}"
      # mail:
      #   enabled: true
        # fromAddress: admin
        # domain: ${CLUSTER_DOMAIN}
        # smtp:
        #   host: smtp.${CLUSTER_DOMAIN}
        #   port: 25
        #   authtype: NONE
        #   name: ""
        #   password: ""
      # securityContext:
      #   runAsNonRoot: true
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '${NETWORK_K8S_POD_CIDR}',
              2 => '${NETWORK_K8S_POD_CIDR_V6}',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          ); ?>
        misc.config.php: |-
          <?php
          $CONFIG = array (
            'default_phone_region' => 'RO',
            'maintenance_window_start' => 2,
          ); ?>
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: cluster17-rw.db.svc.cluster.local:5432
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-db
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-body-size: "512M"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
    tls:
      - hosts:
          - *host
        secretName: cloud-cert
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    metrics:
      enabled: false
      image:
        tag: 0.7.0@sha256:85d412884b6cc14c0cfc03d68bc1d15a6f5a2144a4152ba333ce902ade681c8b
      serviceMonitor:
        enabled: false
    # this seems to be required for nextcloud initialization which takes a long time
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 2
    cronjob:
      enabled: true
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        memory: 512Mi
