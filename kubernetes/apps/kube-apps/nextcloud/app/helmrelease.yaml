---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  timeout: 5m
  interval: 10m
  chart:
    spec:
      chart: nextcloud
      version: 6.6.9
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: -3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: -3
  # dependsOn:
  #   - name: volsync
  #     namespace: storage
  values:
    image:
      tag: 30.0.0-fpm-alpine@sha256:c13308eaba442e9af950fb79e4d2fc4e8258d22e9ef68b85953d6431b17618c1
      flavor: fpm-alpine
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.27.4-alpine@sha256:4ff102c5d78d254a6f0da062b3cf39eaf07f01eec0927fd21e219d0af8bc0591
    redis:
      enabled: true
      auth:
        existingSecret: nextcloud-secret
        existingSecretPasswordKey: pass
      master:
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            memory: 256Mi
      replica:
        replicaCount: 1
        resources:
          requests:
            cpu: 150m
            memory: 128Mi
          limits:
            memory: 256Mi
    nextcloud:
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.8@sha256:217c47c886965474f5c234b5a35ed008f53b39ea90a3088b31c0da98e1f9284d
          envFrom:
            - secretRef:
                name: nextcloud-db
      datadir: /var/www/data
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
        usernameKey: user
        passwordKey: pass
      # extraEnv:
      #   - name: REDIS_HOST
      #     value: dragonfly.db.svc.cluster.local.
      #   - name: REDIS_HOST_PORT
      #     value: "6379"
      host: &host "cloud.${SECRET_DOMAIN}"
      # mail:
      #   enabled: true
        # fromAddress: admin
        # domain: ${CLUSTER_DOMAIN}
        # smtp:
        #   host: smtp.${CLUSTER_DOMAIN}
        #   port: 25
        #   authtype: NONE
        #   name: ""
        #   password: ""
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
      # configs:
      #   proxy.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'trusted_proxies' => array(
      #         0 => '127.0.0.1',
      #         1 => '${NETWORK_K8S_POD_CIDR}',
      #         2 => '${NETWORK_K8S_POD_CIDR_V6}',
      #       ),
      #       'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
      #     ); ?>
      #   misc.config.php: |-
      #     <?php
      #     $CONFIG = array (
      #       'default_phone_region' => 'RO',
      #       'maintenance_window_start' => 2,
      #     ); ?>
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: cluster17-rw.db.svc.cluster.local:5432
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: nextcloud-db
        usernameKey: INIT_POSTGRES_USER
        passwordKey: INIT_POSTGRES_PASS
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-body-size: "512M"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
        nginx.ingress.kubernetes.io/server-snippet: |
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /public.php?service=webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - *host
          secretName: cloud-cert
    persistence:
      enabled: true
      existingClaim: nextcloud
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    metrics:
      enabled: false
      image:
        tag: 0.7.0@sha256:85d412884b6cc14c0cfc03d68bc1d15a6f5a2144a4152ba333ce902ade681c8b
      serviceMonitor:
        enabled: false
    # this seems to be required for nextcloud initialization which takes a long time
    livenessProbe:
      enabled: false
    readinessProbe:
      enabled: false
    startupProbe:
      enabled: false
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 2
    cronjob:
      enabled: true
    resources:
      requests:
        cpu: 500m
        memory: 256Mi
      limits:
        memory: 512Mi
